var _React = React,
    useState = _React.useState,
    useEffect = _React.useEffect,
    useRef = _React.useRef;
var _Recoil = Recoil,
    RecoilRoot = _Recoil.RecoilRoot,
    useRecoilValue = _Recoil.useRecoilValue,
    useSetRecoilState = _Recoil.useSetRecoilState;


var globalHeightOffset = 150;
var globalChartOffset = 48;

var date = '2020-12-18';

var heightState = Recoil.atom({
  key: 'heightState',
  default: window.innerHeight - globalHeightOffset
});

var Homepage = function Homepage() {
  return React.createElement(
    'div',
    null,
    'This is the homepage'
  );
};

var useECharts = function useECharts(chartRef, options, height) {
  var chart = null;

  var renderChart = function renderChart() {
    var renderedInstance = echarts.getInstanceByDom(chartRef.current);
    if (renderedInstance) {
      chart = renderedInstance;
    } else {
      chart = echarts.init(chartRef.current);
    }
    chart.setOption(options);
    chart.resize();
  };

  useEffect(function () {
    renderChart();
  }, [options, height]);

  useEffect(function () {
    return function () {
      return chart && chart.dispose();
    };
  }, []);
};

var colorSpan = function colorSpan(color) {
  var style = "display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px";
  return '<span style="' + style + ';background-color:' + color + '"></span>';
};

var OpenContCloseVolDist = function OpenContCloseVolDist() {
  var chartRef = useRef(null);
  var height = useRecoilValue(heightState);

  var volDistStr = '{"session":["Open Auction","Continuous","Close Auction"],"historical":[0.01305,0.72251,0.26444],"realized":[0.07162666,0.592729,0.3356444],"price":[90.71,89.76831,90.13]}';
  var volDist = JSON.parse(volDistStr);

  var options = {
    title: {
      text: "Volume Distribution and Average Price",
      left: 'center',
      padding: [0, 5]
    },
    tooltip: {
      show: false,
      trigger: "axis",
      axisPointer: {
        animation: true,
        type: 'cross',
        crossStyle: {
          color: '#999'
        }
      },
      formatter: function formatter(params) {
        var rez = '<p style="text-align:left"><b>' + params[0].axisValue + '</b></p>';
        rez += "<table>";
        params.forEach(function (item) {
          var colorEle = colorSpan(item.color);
          var fmt = "0.0%";
          if (item.seriesName === "Avg. Price") {
            fmt = item.data < 1 ? "0.0000" : "0.00";
          }
          var pct = numeral(item.data).format(fmt);
          var xx = '<tr><td style="text-align:left">' + colorEle + ' ' + item.seriesName + '</td><td style="text-align:right;padding-left:5px">' + pct + '</td></tr>';
          rez += xx;
        });
        rez += "</table>";
        return rez;
      }
    },
    legend: {
      data: ['Historical', 'Realized', 'Avg. Price'],
      bottom: 0,
      left: "center"
    },
    xAxis: [{
      type: 'category',
      data: volDist.session,
      axisPointer: {
        type: 'shadow'
      }
    }],
    yAxis: [{
      type: 'value',
      name: 'Volume (%)',
      min: 0,
      max: 'dataMax',
      axisLabel: {
        formatter: function formatter(value) {
          return numeral(value).format('0.%');
        }
      }
    }, {
      type: 'value',
      name: 'Price',
      min: 'dataMin',
      max: 'dataMax',
      axisLabel: {
        formatter: function formatter(value) {
          return value > 1 ? numeral(value).format('0.00') : numeral(value).format('0.0000');
        }
      }
    }],
    series: [{
      name: 'Historical',
      type: 'bar',
      data: volDist.historical,
      label: {
        show: true,
        position: 'top',
        formatter: function formatter(d) {
          return numeral(d.data).format('0.0%');
        }
      }
    }, {
      name: 'Realized',
      type: 'bar',
      data: volDist.realized,
      label: {
        show: true,
        position: 'top',
        formatter: function formatter(d) {
          return numeral(d.data).format('0.0%');
        }
      }
    }, {
      name: 'Avg. Price',
      type: 'line',
      yAxisIndex: 1,
      data: volDist.price
    }]
  };

  useECharts(chartRef, options, height);

  return React.createElement('div', { style: { width: "100%", height: height - globalChartOffset * 2 }, ref: chartRef });
};

var ContinuousVolProfile = function ContinuousVolProfile() {
  var chartRef = useRef(null);
  var height = useRecoilValue(heightState);

  var volProfileStr = '{"time":["09:30","09:31","09:32","09:33","09:34","09:35","09:36","09:37","09:38","09:39","09:40","09:41","09:42","09:43","09:44","09:45","09:46","09:47","09:48","09:49","09:50","09:51","09:52","09:53","09:54","09:55","09:56","09:57","09:58","09:59","10:00","10:01","10:02","10:03","10:04","10:05","10:06","10:07","10:08","10:09","10:10","10:11","10:12","10:13","10:14","10:15","10:16","10:17","10:18","10:19","10:20","10:21","10:22","10:23","10:24","10:25","10:26","10:27","10:28","10:29","10:30","10:31","10:32","10:33","10:34","10:35","10:36","10:37","10:38","10:39","10:40","10:41","10:42","10:43","10:44","10:45","10:46","10:47","10:48","10:49","10:50","10:51","10:52","10:53","10:54","10:55","10:56","10:57","10:58","10:59","11:00","11:01","11:02","11:03","11:04","11:05","11:06","11:07","11:08","11:09","11:10","11:11","11:12","11:13","11:14","11:15","11:16","11:17","11:18","11:19","11:20","11:21","11:22","11:23","11:24","11:25","11:26","11:27","11:28","11:29","11:30","11:31","11:32","11:33","11:34","11:35","11:36","11:37","11:38","11:39","11:40","11:41","11:42","11:43","11:44","11:45","11:46","11:47","11:48","11:49","11:50","11:51","11:52","11:53","11:54","11:55","11:56","11:57","11:58","11:59","12:00","12:01","12:02","12:03","12:04","12:05","12:06","12:07","12:08","12:09","12:10","12:11","12:12","12:13","12:14","12:15","12:16","12:17","12:18","12:19","12:20","12:21","12:22","12:23","12:24","12:25","12:26","12:27","12:28","12:29","12:30","12:31","12:32","12:33","12:34","12:35","12:36","12:37","12:38","12:39","12:40","12:41","12:42","12:43","12:44","12:45","12:46","12:47","12:48","12:49","12:50","12:51","12:52","12:53","12:54","12:55","12:56","12:57","12:58","12:59","13:00","13:01","13:02","13:03","13:04","13:05","13:06","13:07","13:08","13:09","13:10","13:11","13:12","13:13","13:14","13:15","13:16","13:17","13:18","13:19","13:20","13:21","13:22","13:23","13:24","13:25","13:26","13:27","13:28","13:29","13:30","13:31","13:32","13:33","13:34","13:35","13:36","13:37","13:38","13:39","13:40","13:41","13:42","13:43","13:44","13:45","13:46","13:47","13:48","13:49","13:50","13:51","13:52","13:53","13:54","13:55","13:56","13:57","13:58","13:59","14:00","14:01","14:02","14:03","14:04","14:05","14:06","14:07","14:08","14:09","14:10","14:11","14:12","14:13","14:14","14:15","14:16","14:17","14:18","14:19","14:20","14:21","14:22","14:23","14:24","14:25","14:26","14:27","14:28","14:29","14:30","14:31","14:32","14:33","14:34","14:35","14:36","14:37","14:38","14:39","14:40","14:41","14:42","14:43","14:44","14:45","14:46","14:47","14:48","14:49","14:50","14:51","14:52","14:53","14:54","14:55","14:56","14:57","14:58","14:59","15:00","15:01","15:02","15:03","15:04","15:05","15:06","15:07","15:08","15:09","15:10","15:11","15:12","15:13","15:14","15:15","15:16","15:17","15:18","15:19","15:20","15:21","15:22","15:23","15:24","15:25","15:26","15:27","15:28","15:29","15:30","15:31","15:32","15:33","15:34","15:35","15:36","15:37","15:38","15:39","15:40","15:41","15:42","15:43","15:44","15:45","15:46","15:47","15:48","15:49","15:50","15:51","15:52","15:53","15:54","15:55","15:56","15:57","15:58","15:59"],"orderProfile":[0,0,0,0.007706238,0.01541248,0.01541248,0.01541248,0.02311871,0.02311871,0.02311871,0.02697183,0.02701036,0.0347166,0.0347166,0.04242284,0.04242284,0.04242284,0.04242284,0.04242284,0.04242284,0.0539822,0.0539822,0.0539822,0.0539822,0.05783532,0.05783532,0.05783532,0.05783532,0.05783532,0.05783532,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08095403,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.08866027,0.09274458,0.09274458,0.0965977,0.0965977,0.0965977,0.0965977,0.1004508,0.1004508,0.1004508,0.1004508,0.1004508,0.1004508,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1120102,0.1235695,0.1235695,0.1235695,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.1274226,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.138982,0.1543945,0.1543945,0.1543945,0.1543945,0.1543945,0.1543945,0.1582476,0.1582476,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.1659538,0.167418,0.167418,0.167418,0.167418,0.167418,0.167418,0.1751243,0.1751243,0.1751243,0.1751243,0.1751243,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.1967017,0.2121142,0.2121142,0.2121142,0.2121527,0.2121527,0.2121527,0.2121527,0.2121527,0.2306092,0.2306092,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2429777,0.2468308,0.2468308,0.2468308,0.2468308,0.2468308,0.254537,0.2583902,0.2583902,0.2583902,0.2583902,0.2583902,0.2583902,0.2583902,0.2622433,0.2660964,0.2660964,0.2660964,0.2660964,0.2699495,0.2699495,0.2776558,0.2776558,0.2776558,0.2815089,0.2815089,0.2815089,0.2815089,0.2892151,0.2892151,0.2892151,0.2892151,0.2892151,0.2892922,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3007745,0.3084807,0.3084807,0.3084807,0.3123338,0.3123338,0.3123338,0.3123338,0.3123338,0.3123338,0.3277463,0.3277463,0.3277463,0.3277463,0.3277463,0.3277463,0.3277463,0.3354525,0.3354525,0.3354525,0.3354525,0.3354525,0.3354525,0.3354525,0.3354525,0.3354525,0.3470119,0.350865,0.350865,0.350865,0.350865,0.350865,0.350865,0.3547181,0.3547181,0.3547181,0.3547181,0.3547181,0.3547181,0.3547181,0.3778369,0.3778369,0.3778369,0.3778369,0.3778369,0.3778369,0.3778369,0.3778369,0.3861211,0.3893962,0.3893962,0.3893962,0.3893962,0.3893962,0.3893962,0.3893962,0.4009556,0.4009556,0.4009556,0.4009556,0.4009556,0.4048087,0.4048087,0.4086618,0.4125149,0.4125149,0.416368,0.416368,0.4202212,0.4202212,0.4202212,0.4278889,0.4317805,0.4317805,0.4317805,0.4317805,0.4356336,0.4433399,0.4433399,0.4433399,0.447193,0.447193,0.447193,0.4548992,0.4548992,0.4548992,0.4626055,0.4626055,0.4626055,0.4626055,0.4703117,0.4703117,0.4703117,0.4818711,0.4818711,0.4818711,0.4818711,0.4857242,0.4857242,0.4895773,0.4934304,0.4934304,0.5011367,0.5011367,0.5088429,0.5088429,0.5088429,0.512696,0.5165491,0.5165491,0.5204023,0.5204023,0.5281085,0.5319616,0.5319616,0.5358147,0.5396679,0.5396679,0.5473741,0.5473741,0.5550803,0.5550803,0.5589335,0.5594344,0.5671406,0.5675259,0.5709937,0.5787,0.5787,0.5825531,0.5902593,0.5902593,0.6018187,0.6018187,0.6095249,0.6172311,0.6172311,0.6287905,0.6287905,0.6287905,0.6364967,0.6480561,0.6480561,0.6673217,0.6673217,0.6788811,0.6788811,0.6981466,0.7058529,0.7212654,0.740531,0.7675028,0.8058413,0.8058413,0.8289986,0.8521173,0.9163873,0.935152,0.9546103,1],"histProfile":[0.004069148,0.007972208,0.01180606,0.01561224,0.01933537,0.02301698,0.02661555,0.02989578,0.03321753,0.0360687,0.03849082,0.04084373,0.04315511,0.04552186,0.04788861,0.05025536,0.05258059,0.0549335,0.05730024,0.05966699,0.06200606,0.06433129,0.06655963,0.06884334,0.0711132,0.07334155,0.07555605,0.07771519,0.07991585,0.08214419,0.08435869,0.08654551,0.08870465,0.09084995,0.09300909,0.09519591,0.09738274,0.09948651,0.1015764,0.1036525,0.1057286,0.1078186,0.1098532,0.1118877,0.1139223,0.1159846,0.118033,0.1200952,0.1221575,0.1241644,0.1261713,0.1281782,0.130185,0.1322196,0.1342265,0.1362611,0.1383095,0.1403718,0.1424894,0.1445793,0.1466693,0.1487592,0.150863,0.1529806,0.155112,0.1572712,0.1594165,0.1615479,0.1636932,0.1658109,0.1679008,0.169963,0.1719699,0.1739907,0.1759976,0.1779906,0.1799975,0.1820044,0.1839559,0.1858521,0.1877344,0.1895752,0.1913607,0.1931323,0.1949177,0.1966616,0.1984194,0.2001633,0.2019072,0.2036512,0.2053674,0.2070698,0.2088276,0.2105715,0.2123016,0.2140455,0.2157756,0.2174641,0.2191527,0.2208551,0.2225575,0.2242599,0.2259484,0.2276231,0.2293255,0.2310279,0.232675,0.2343359,0.2360383,0.2377268,0.2394292,0.2411455,0.2428202,0.2444949,0.2461558,0.2478028,0.2494498,0.2510692,0.2526885,0.2542802,0.2558581,0.2574359,0.2589584,0.2605085,0.2620587,0.2636226,0.2651728,0.2667506,0.2683423,0.2699063,0.2714703,0.2730204,0.2745291,0.2760515,0.277574,0.2791242,0.2806882,0.2822798,0.2838853,0.285477,0.2870825,0.288688,0.2903351,0.2920513,0.2938229,0.2956499,0.2975184,0.2994561,0.3014214,0.303373,0.3053245,0.3072483,0.3091722,0.311096,0.313006,0.3148607,0.31666,0.3183762,0.3200233,0.3216288,0.3232204,0.3247568,0.3262792,0.3278155,0.3293242,0.3308466,0.3323414,0.3338224,0.3352756,0.3367289,0.338196,0.3396908,0.3411579,0.3426527,0.3441336,0.3456423,0.3471371,0.348618,0.3501128,0.3516076,0.3531439,0.3546941,0.3562442,0.357822,0.3593583,0.3608947,0.362431,0.3639811,0.3655313,0.3670814,0.3686316,0.3702094,0.3717457,0.3732682,0.3747491,0.3762301,0.3776695,0.3790813,0.380493,0.3818632,0.3832196,0.3845483,0.3858632,0.3872196,0.3885759,0.38996,0.3913579,0.3927835,0.3942229,0.3956623,0.3971295,0.3986242,0.4001329,0.4016692,0.4032332,0.404811,0.4063888,0.407939,0.409503,0.411067,0.4126725,0.4142918,0.415925,0.4175582,0.4191776,0.4207969,0.4224025,0.424008,0.4256273,0.4272328,0.4288107,0.4304439,0.4320771,0.4337241,0.4353435,0.4370182,0.4386652,0.4403122,0.441987,0.4436478,0.4452949,0.4469558,0.4486028,0.4502498,0.4519107,0.4535162,0.4551217,0.4567272,0.4583604,0.4599521,0.4615715,0.4632323,0.4648794,0.4665679,0.4682703,0.4699589,0.471689,0.4734191,0.4751215,0.47681,0.4785124,0.4801733,0.4818342,0.4835227,0.4852528,0.4869967,0.4887683,0.4905261,0.4923115,0.4941246,0.4958963,0.4976679,0.4994395,0.5012249,0.5030103,0.5048788,0.5067473,0.5086158,0.5104566,0.5122974,0.5141244,0.5159652,0.5177645,0.5195637,0.5213769,0.5232177,0.5250723,0.5269685,0.528837,0.5306501,0.5324771,0.5342625,0.5360756,0.5379164,0.5397711,0.5416534,0.5435496,0.5454596,0.5473834,0.5492934,0.5511342,0.5529612,0.5547743,0.5565875,0.5583591,0.5601307,0.5618884,0.5636047,0.5653209,0.5669956,0.568698,0.5703727,0.5720474,0.5737637,0.5755214,0.5773761,0.5792723,0.5811961,0.5831615,0.5851268,0.5871337,0.589196,0.5912583,0.5933897,0.5955489,0.5977218,0.5999087,0.6020678,0.6042269,0.6063307,0.6084068,0.6104829,0.6126005,0.614732,0.6168634,0.6190364,0.6212509,0.6234793,0.625763,0.6280882,0.6304688,0.6329324,0.6354514,0.6380673,0.6407247,0.6434236,0.6461087,0.6488353,0.6516034,0.6543716,0.6571535,0.6599632,0.6627728,0.6656517,0.6685997,0.671534,0.6745235,0.6775962,0.6807933,0.6841013,0.6874645,0.6909247,0.6944817,0.698191,0.7020664,0.7060525,0.710177,0.7144538,0.7189935,0.7237685,0.7287512,0.7339276,0.7394361,0.7458305,0.7527923,0.7603217,0.7685015,0.7778577,0.7882105,0.7995599,0.8117258,0.8256218,0.843407,0.8618843,0.8815795,0.9026449,0.9253159,0.9485543,0.9733014,1],"mktProfile":[0.00222569,0.0046975,0.01118154,0.01345356,0.01589641,0.0159437,0.01617824,0.01819449,0.01962295,0.02053793,0.02481075,0.02508486,0.02578461,0.02618709,0.02798714,0.03006323,0.03017036,0.03027943,0.03063365,0.03212387,0.03352338,0.03493253,0.0368677,0.03908857,0.04112508,0.04172156,0.04191556,0.04307087,0.04334305,0.04390768,0.04661306,0.04895361,0.05049113,0.05177964,0.05381422,0.05528322,0.05552354,0.05592409,0.05792972,0.05850014,0.05969116,0.06011198,0.06096423,0.06290616,0.06375841,0.06379798,0.06402093,0.0661723,0.06810265,0.06969615,0.07025595,0.07056288,0.07058025,0.0734584,0.07524011,0.07739824,0.07932955,0.0822077,0.08340548,0.08432819,0.08456079,0.0870355,0.08913379,0.08947063,0.09046862,0.09127358,0.09526071,0.09816974,0.09999488,0.1002178,0.1005528,0.1017013,0.1019387,0.1036568,0.1036818,0.1057879,0.106838,0.1082124,0.1085994,0.1089401,0.1099603,0.1104448,0.1107122,0.1114071,0.1115953,0.1154251,0.1175417,0.1179915,0.1191169,0.1202655,0.1205251,0.121747,0.1233588,0.1239157,0.1245373,0.1252535,0.1255112,0.1262119,0.1272176,0.12754,0.1282388,0.1292811,0.131224,0.1328648,0.1333851,0.1358067,0.1372844,0.1375488,0.1377033,0.1383808,0.1392002,0.140759,0.1423959,0.1427,0.1432472,0.1439421,0.1444672,0.1474303,0.1475364,0.1483105,0.1505015,0.1509705,0.1515197,0.1525129,0.158912,0.1649453,0.1654616,0.1670262,0.1685386,0.170302,0.1705838,0.1712942,0.1722188,0.173517,0.1737342,0.1737351,0.1750043,0.1755535,0.1760679,0.1763575,0.1771586,0.177674,0.1796217,0.180196,0.1822701,0.1825674,0.1847024,0.1868209,0.1872196,0.1874203,0.1877938,0.1901315,0.1909335,0.192833,0.193361,0.1938242,0.1943686,0.196548,0.1967642,0.1980633,0.1990777,0.2005013,0.2022463,0.202256,0.2027695,0.2059603,0.206358,0.2072276,0.2082883,0.2087034,0.2100112,0.2103741,0.2104957,0.2113228,0.211763,0.2132271,0.2135572,0.2137213,0.2145253,0.2174469,0.2179729,0.2189352,0.2196533,0.2199283,0.2204331,0.2212825,0.2223886,0.22598,0.2313251,0.2318135,0.2325846,0.2326705,0.232907,0.234237,0.2345169,0.2347109,0.2378352,0.2392231,0.2398939,0.2433405,0.244214,0.2447651,0.2455537,0.2474396,0.247707,0.248704,0.2583075,0.2674728,0.2685663,0.2688636,0.2690113,0.2712514,0.2726538,0.2729521,0.2754635,0.276861,0.2785462,0.2789825,0.279856,0.2807256,0.2822168,0.282793,0.2835284,0.2835371,0.2843064,0.2853932,0.2877685,0.2889025,0.2892761,0.2893803,0.2899333,0.2913319,0.2935672,0.2946405,0.2949619,0.2958132,0.3044727,0.3067766,0.3075835,0.3079107,0.3115947,0.3122935,0.3139845,0.3148821,0.3149362,0.3167478,0.3175769,0.3196616,0.3214935,0.3224896,0.3266437,0.3274747,0.3281233,0.3284727,0.3319416,0.3326992,0.3352743,0.3364315,0.3367858,0.3370039,0.3372577,0.3374073,0.3401803,0.3417419,0.342157,0.3435902,0.3443527,0.3445892,0.3457754,0.3475069,0.3513888,0.3515635,0.3553094,0.3561578,0.3595822,0.359588,0.3597916,0.3611931,0.3622654,0.3639438,0.3650634,0.3650914,0.3660797,0.3662998,0.3671926,0.3673692,0.3689338,0.3700688,0.3705794,0.3719702,0.37303,0.3756379,0.37605,0.3769148,0.3781328,0.3792573,0.3808681,0.3813546,0.3821702,0.3835948,0.3845204,0.3874516,0.3884119,0.3892198,0.3953023,0.3986312,0.4004129,0.4035574,0.404069,0.405232,0.4064491,0.4070948,0.4088051,0.4096322,0.4101872,0.4121571,0.4135856,0.4135875,0.4143597,0.4154822,0.4164946,0.4180572,0.4193245,0.4216882,0.4225733,0.424106,0.4242421,0.4269282,0.4280825,0.430923,0.4335213,0.4350221,0.4378423,0.4399532,0.4410602,0.4422599,0.4441652,0.4448987,0.4491407,0.4511917,0.4517476,0.4539077,0.4575589,0.4594574,0.4614997,0.4639184,0.4654154,0.4666373,0.4675793,0.4684741,0.470996,0.4735789,0.4771983,0.478867,0.4813147,0.4826206,0.4863664,0.4888547,0.4908371,0.4957151,0.4999802,0.5013257,0.5048679,0.5080915,0.5102854,0.51656,0.5178311,0.5229427,0.5245497,0.5250612,0.5295705,0.5325114,0.5345788,0.5396402,0.5447122,0.5501248,0.5541921,0.5588423,0.5628005,0.5727263,0.6109453,0.6254132,0.6404082,0.6670556,0.7688737,0.794115,0.8232198,0.849651,0.8913031,1],"vwap":[90.3548,90.28392,90.52218,90.29624,90.24496,90.29856,90.37864,90.36273,90.43307,90.52396,90.57329,90.55553,90.52082,90.57925,90.50574,90.40144,90.36937,90.38368,90.37713,90.38608,90.31907,90.35551,90.50565,90.50446,90.4424,90.41858,90.43254,90.4049,90.41432,90.42376,90.35529,90.25863,90.26441,90.16495,90.07708,90.02443,90.04754,90.02702,90.06083,90.12469,90.14279,90.19144,90.15314,90.04778,90.06064,90.10078,90.11413,90.15757,90.12882,90.04861,90.11959,90.0726,90.05743,89.98853,89.99206,90.01101,90.07539,90.0254,89.9978,89.97105,89.94519,89.9627,89.95619,90.02496,89.97858,89.93362,89.86828,89.92399,89.91305,89.93409,89.9522,89.91899,89.87153,89.91009,89.90885,89.89694,89.88042,89.86612,89.87958,89.87249,89.85541,89.89872,89.87123,89.89405,89.89274,89.95603,89.98375,89.98366,89.98265,89.92884,89.87351,89.89642,89.88634,89.91437,89.95032,89.94472,89.95755,89.91166,89.93739,89.91905,89.89305,89.84724,89.78618,89.72324,89.75087,89.70581,89.72999,89.71597,89.73519,89.73992,89.73932,89.70159,89.68564,89.73709,89.71915,89.71796,89.69752,89.65217,89.58323,89.58619,89.55385,89.54505,89.54134,89.52732,89.58665,89.56484,89.56621,89.5231,89.45911,89.45489,89.5076,89.51694,89.56659,89.55864,89.54217,89.52,89.5634,89.5851,89.55183,89.5277,89.51878,89.51931,89.54972,89.60416,89.63017,89.67612,89.63867,89.55547,89.55659,89.5591,89.54261,89.52825,89.55763,89.5972,89.65011,89.69212,89.71864,89.69806,89.72434,89.71017,89.71053,89.72027,89.78118,89.784,89.79457,89.81156,89.78567,89.82956,89.84239,89.83599,89.83469,89.85045,89.86385,89.8346,89.85018,89.82735,89.83614,89.83411,89.80939,89.82268,89.85343,89.85696,89.83229,89.82563,89.82985,89.82186,89.84094,89.90142,89.84758,89.79253,89.79841,89.78697,89.78292,89.7562,89.73998,89.74373,89.78602,89.83001,89.77679,89.75183,89.74117,89.73419,89.70549,89.6889,89.68332,89.62481,89.68502,89.71126,89.7474,89.74166,89.72276,89.68905,89.68867,89.68697,89.68434,89.68294,89.68338,89.6702,89.66519,89.65195,89.63973,89.63368,89.63772,89.65333,89.65831,89.65427,89.63306,89.63797,89.66004,89.65574,89.65876,89.64488,89.61852,89.6345,89.63375,89.65674,89.69002,89.71413,89.73279,89.76404,89.73315,89.69613,89.66469,89.66396,89.64937,89.68536,89.64797,89.62831,89.62769,89.63649,89.67893,89.70409,89.67641,89.68431,89.6703,89.7171,89.68827,89.65309,89.63948,89.65464,89.63055,89.63913,89.65959,89.6957,89.68712,89.72643,89.76776,89.80229,89.82431,89.85281,89.83216,89.81651,89.81557,89.80937,89.77641,89.73833,89.755,89.77097,89.7992,89.76053,89.8037,89.79369,89.77585,89.77648,89.79363,89.805,89.7727,89.79619,89.79764,89.78386,89.78937,89.77865,89.78419,89.75386,89.73622,89.75147,89.72319,89.69674,89.69059,89.70963,89.7406,89.77486,89.76153,89.76747,89.7619,89.78451,89.77399,89.71376,89.6741,89.7169,89.7256,89.65283,89.65368,89.62383,89.58388,89.60459,89.57474,89.57,89.58026,89.57969,89.55931,89.52759,89.54143,89.54676,89.52338,89.50094,89.48396,89.43953,89.37096,89.36907,89.40771,89.39946,89.36095,89.34458,89.32235,89.34123,89.33052,89.34274,89.32474,89.30425,89.27531,89.26751,89.26596,89.26647,89.27793,89.33143,89.3225,89.31087,89.301,89.29828,89.31179,89.3043,89.23841,89.23965,89.25366,89.2704,89.28089,89.30233,89.302,89.34196,89.39914,89.4318,89.39872,89.36664,89.33621,89.30339,89.31946,89.27031,89.23379,89.19858,89.2075,89.27291,89.34994,89.38719,89.40532,89.41783,89.42134,89.47125,89.41036,89.47446,89.25383,89.39802,89.54689,89.52619,89.65346,89.99766,90.07104,90.04801,90.10678,90.17818]}';
  var volProfile = JSON.parse(volProfileStr);
  var xs = volProfile['time'].map(function (time) {
    return date + 'T' + time;
  });

  var getData = function getData(dataType) {
    if (!R.has(dataType, volProfile)) {
      console.log('Key ' + dataType + ' is not available in volProfile');
      return [];
    }
    var data = volProfile[dataType];
    return data.map(function (v, i) {
      return [xs[i], v];
    });
  };

  var options = {
    title: {
      text: 'Volume Profile for Continuous Session',
      left: 'center',
      padding: [0, 5]
    },
    tooltip: {
      show: true,
      trigger: "axis",
      axisPointer: {
        animation: true,
        type: 'cross',
        crossStyle: { color: '#999' }
      },
      formatter: function formatter(params) {
        var rez = '<p style="text-align:left"><b>Time: ' + params[0].data[0].slice(-5) + '</b></p>';
        rez += "<table>";
        params.forEach(function (item) {
          var colorEle = colorSpan(item.color);
          var fmt = "0.00%";
          if (item.seriesName === "Price") {
            fmt = item.data[1] < 1 ? "0.0000" : "0.00";
          }
          var pct = numeral(item.data[1]).format(fmt);
          var xx = '<tr><td style="text-align:left">' + colorEle + ' ' + item.seriesName + '</td><td style="text-align:right;padding-left:5px">' + pct + '</td></tr>';
          rez += xx;
        });
        rez += "</table>";
        return rez;
      }
    },
    legend: {
      data: ['Historical Profile', 'Order Profile', 'Market Profile', 'Price'],
      bottom: 0,
      left: "center"
    },
    xAxis: [{
      type: 'time',
      boundaryGap: true,
      min: 'dataMin',
      max: 'dataMax',
      splitNumber: 10,
      axisLabel: { formatter: function formatter(value) {
          return dayjs(value).format('HH:mm');
        } },
      axisPointer: {
        type: 'shadow'
      }
    }],
    yAxis: [{
      type: 'value',
      name: 'Volume Profile (%)',
      min: 0,
      max: 'dataMax',
      axisLabel: { formatter: function formatter(value) {
          return numeral(value).format('0.%');
        } }
    }, {
      type: 'value',
      name: 'Price',
      min: 'dataMin',
      max: 'dataMax',
      axisLabel: { formatter: function formatter(value) {
          return value > 1 ? numeral(value).format('0.00') : numeral(value).format('0.0000');
        } }
    }],
    series: [{
      name: 'Historical Profile',
      type: 'line',
      showSymbol: false,
      data: getData('histProfile')
    }, {
      name: 'Order Profile',
      type: 'line',
      showSymbol: false,
      data: getData('orderProfile')
    }, {
      name: 'Market Profile',
      type: 'line',
      showSymbol: false,
      data: getData('mktProfile')
    }, {
      name: 'Price',
      type: 'line',
      step: 'end',
      showSymbol: false,
      yAxisIndex: 1,
      data: getData('vwap')
    }]
  };

  useECharts(chartRef, options, height);

  return React.createElement('div', { style: { width: "100%", height: height - globalChartOffset * 2 }, ref: chartRef });
};